ext {
    def RetrofitVersion = '2.9.0'
    def AndroidxAppCompatVersion = '1.1.0'
    def AndroidxCoreVersion = '1.1.0'
    def KotlinVersion = '1.5.21'
    def OkHttpVersion = '4.7.2'

    def AndroidxConstraintLayoutVersion = '2.0.0-beta4'
    def AndroidxLifeCycleVersion = '2.2.0'
    def ChuckerVersion = '3.4.0'
    def RxVersion = '3.0.0'
    def hilt_version = "2.38"
    def hilt_work_version = "1.0.0"
    def GoogleMaterialVersion = '1.2.1'
    def ComposeVersion = '1.0.1'
    def RoomVersion = '2.4.0-alpha03'
    def firebaseVersion = [
            analytics          : "18.0.0",
            database           : "19.2.1",
            iid                : "20.2.4",
            remoteConfig       : "20.0.2",
            storage            : "19.2.0",
            auth               : "20.0.0",
            messaging          : "20.2.4",
            firebaseCrashlytics: "17.2.2",
            dynamicLinks       : "19.1.1",
    ]
    def playServicesVersion = [
            location   : "18.0.0",
            maps       : "16.1.0",
            gcm        : "16.1.0",
            coreRuntime: "1.10.1"
    ]

    kotlinDependencies = [
            kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${KotlinVersion}"
    ]

    kotlin = kotlinDependencies.values()

    androidxDependencies = [
            androidxAppCompat          : "androidx.appcompat:appcompat:${AndroidxAppCompatVersion}",
            androidXKtx                : "androidx.activity:activity-ktx:${AndroidxAppCompatVersion}",
            androidxCore               : "androidx.core:core-ktx:${AndroidxCoreVersion}",
            androidxContraintLayout    : "androidx.constraintlayout:constraintlayout:${AndroidxConstraintLayoutVersion}",
            androidxLifecycle          : "androidx.lifecycle:lifecycle-extensions:${AndroidxLifeCycleVersion}",
            androidxLifecycleViewModel : "androidx.lifecycle:lifecycle-viewmodel-ktx:${AndroidxLifeCycleVersion}",
            androidxNavigation         : "androidx.navigation:navigation-fragment:${AndroidxLifeCycleVersion}",
            androidxNavigationUI       : "androidx.navigation:navigation-ui:${AndroidxLifeCycleVersion}",
            androidxNavigationKtx      : "androidx.navigation:navigation-fragment-ktx:${AndroidxLifeCycleVersion}",
            androidxNavigationUIKtx    : "androidx.navigation:navigation-ui-ktx:${AndroidxLifeCycleVersion}",
            androidxLifecycleExtensions: "androidx.lifecycle:lifecycle-extensions:${AndroidxLifeCycleVersion}",
            viewpager2                 : "androidx.viewpager2:viewpager2:1.0.0",
            bioMetrics                 : "androidx.biometric:biometric:1.1.0"
    ]

    androidX = androidxDependencies.values()

    networkDependencies = [
            retrofit                : "com.squareup.retrofit2:retrofit:${RetrofitVersion}",
            retrofitGsonConverter   : "com.squareup.retrofit2:converter-gson:${RetrofitVersion}",
            retrofitRxJavaAdapter   : "com.squareup.retrofit2:adapter-rxjava3:${RetrofitVersion}",
            retrofitScalarsConverter: "com.squareup.retrofit2:converter-scalars:${RetrofitVersion}",
            okHttp3                 : "com.squareup.okhttp3:okhttp:${OkHttpVersion}",
            okHttp3Logging          : "com.squareup.okhttp3:logging-interceptor:${OkHttpVersion}"
    ]
    network = networkDependencies.values()

    gsonDependencies = [
            gson: "com.google.code.gson:gson:2.8.6"
    ]
    gson = gsonDependencies.values()

    googleDependencies = [
            googleMaterial: "com.google.android.material:material:${GoogleMaterialVersion}"
    ]
    google = googleDependencies.values()

    compilersDeps = [
            lifecycle: "androidx.lifecycle:lifecycle-compiler:2.2.0",
            deepLink : "com.airbnb:deeplinkdispatch-processor:4.1.0",
            hilt     : "com.google.dagger:hilt-android-compiler:$hilt_version",
            hiltX    : "androidx.hilt:hilt-compiler:1.0.0",
            room     : "androidx.room:room-compiler:$RoomVersion"
    ]

    compilers = compilersDeps.values()

    testingDeps = [
            coreTesting         : "androidx.arch.core:core-testing:2.1.0",
            junit               : "junit:junit:4.13.2",
            junit5Mocktio       : "org.mockito:mockito-junit-jupiter:2.17.0",
            junitRunner         : "org.junit.platform:junit-platform-runner:1.4.0",
            mockitoCore         : "org.mockito:mockito-core:2.25.0",
            junit_jupiter_api   : "org.junit.jupiter:junit-jupiter-api:5.2.0",
            junit_jupiter_params: "org.junit.jupiter:junit-jupiter-params:5.2.0",
            junit_jupiter_engine: "org.junit.jupiter:junit-jupiter-engine:5.2.0",
            mockitoAndroid      : "org.mockito:mockito-android:2.25.0",

    ]

    testing = testingDeps.values()

    instrumentationDeps = [
            testRunner: "androidx.test:runner:1.2.0",
            espresso  : "androidx.test.espresso:espresso-core:3.2.0"
    ]

    instrumentation = instrumentationDeps.values()

    rxDeps = [
            rxjava3   : "io.reactivex.rxjava3:rxjava:$RxVersion",
            rxandroid3: "io.reactivex.rxjava3:rxandroid:$RxVersion",
            rxKotlin  : "io.reactivex.rxjava3:rxkotlin:$RxVersion",
    ]

    rx = rxDeps.values()

    hiltDeps = [
            hiltAndroid: "com.google.dagger:hilt-android:$hilt_version",
            hiltWork   : "androidx.hilt:hilt-work:$hilt_work_version",
    ]

    hilt = hiltDeps.values()

    loggingDeps = [
            logger: 'com.orhanobut:logger:2.2.0',
            timber: 'com.jakewharton.timber:timber:5.0.1'
    ]

    loggingLibs = loggingDeps.values()

    indicatorDeps = [
            v2indicator: 'com.tbuonomo:dotsindicator:4.2'
    ]

    indicator = indicatorDeps.values()

    imageLoadingDeps = [
            coil: 'io.coil-kt:coil:1.3.2'
    ]

    imageLoading = imageLoadingDeps.values()

    composeDeps = [
            ui            : 'androidx.compose.ui:ui:1.0.1',
            // Tooling support (Previews, etc.)
            tooling       : 'androidx.compose.ui:ui-tooling:1.0.1',
            // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
            foundation    : 'androidx.compose.foundation:foundation:1.0.1',
            // Material Design
            googleMaterial: 'androidx.compose.material:material:1.0.1',
            // Material design icons
            icons         : 'androidx.compose.material:material-icons-core:1.0.1',
            iconsExtended : 'androidx.compose.material:material-icons-extended:1.0.1',
            // Integration with activities
            activity      : 'androidx.activity:activity-compose:1.3.1',
            // Integration with ViewModels
            viewModel     : 'androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07',
            // Integration with observables
            livedata      : 'androidx.compose.runtime:runtime-livedata:1.0.1',
            runtimeRx     : 'androidx.compose.runtime:runtime-rxjava2:1.0.1',
            // Image loading
            coil          : 'io.coil-kt:coil-compose:1.3.2',
            // Navigation
            navigation    : 'androidx.navigation:navigation-compose:2.4.0-alpha06'
    ]

    compose = composeDeps.values()

    firebaseDeps = [
            messaging          : "com.google.firebase:firebase-messaging:${firebaseVersion.messaging}",
            dynamicLinks       : "com.google.firebase:firebase-dynamic-links:${firebaseVersion.dynamicLinks}",
            remoteConfig       : "com.google.firebase:firebase-config:${firebaseVersion.remoteConfig}",
            performance        : "com.google.firebase:firebase-perf:19.0.8",
            analytics          : "com.google.firebase:firebase-analytics:${firebaseVersion.analytics}",
            firebaseCrashlytics: "com.google.firebase:firebase-crashlytics:${firebaseVersion.firebaseCrashlytics}",
            bom                : "com.google.firebase:firebase-bom:29.0.0"
    ]
    firebase = firebaseDeps.values()

    playServicesDeps = [
            // Play services libs
            location: "com.google.android.gms:play-services-location:${playServicesVersion.location}",
            maps    : "com.google.android.gms:play-services-maps:${playServicesVersion.maps}",
            gcm     : "com.google.android.gms:play-services-gcm:${playServicesVersion.gcm}",

            // Play core libs
            playCore: "com.google.android.play:core:${playServicesVersion.coreRuntime}"
    ]
    playServices = playServicesDeps.values()

    roomDeps = [
            core: "androidx.room:room-runtime:$RoomVersion",
            rx2 : "androidx.room:room-rxjava3:$RoomVersion"
    ]
    room = roomDeps.values()
}
